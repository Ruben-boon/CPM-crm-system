import jsPDF from 'jspdf';
import { format } from 'date-fns';

export interface BookingPDFData {
  confirmationNo: string;
  confirmationDate: string;
  travelPeriodStart: string;
  travelPeriodEnd: string;
  company?: {
    name: string;
    address?: string;
    city?: string;
    country?: string;
  };
  booker?: {
    firstName: string;
    lastName: string;
    email?: string;
    phone?: string;
  };
  stays?: Array<{
    hotel: string;
    checkInDate: string;
    checkOutDate: string;
    roomType: string;
    roomNumber?: string;
  }>;
  costCentre?: string;
  status: string;
  notes?: string;
}

export function generateBookingPDF(bookingData: BookingPDFData) {
  const doc = new jsPDF();
  
  // Set font styles
  doc.setFont('helvetica');
  
  // Title
  doc.setFontSize(18);
  doc.text('Booking Confirmation', 105, 20, { align: 'center' });
  
  // Confirmation Details
  doc.setFontSize(12);
  doc.text(`Confirmation No: ${bookingData.confirmationNo}`, 20, 40);
  doc.text(`Confirmation Date: ${format(new Date(bookingData.confirmationDate), 'PPP')}`, 20, 47);
  doc.text(`Status: ${bookingData.status}`, 20, 54);
  
  // Travel Period
  doc.setFontSize(14);
  doc.text('Travel Period', 20, 70);
  doc.setFontSize(12);
  doc.text(`Start: ${format(new Date(bookingData.travelPeriodStart), 'PPP')}`, 20, 77);
  doc.text(`End: ${format(new Date(bookingData.travelPeriodEnd), 'PPP')}`, 20, 84);
  
  // Company Details
  if (bookingData.company) {
    doc.setFontSize(14);
    doc.text('Company', 20, 100);
    doc.setFontSize(12);
    doc.text(`Name: ${bookingData.company.name}`, 20, 107);
    if (bookingData.company.address) {
      doc.text(`Address: ${bookingData.company.address}`, 20, 114);
    }
    if (bookingData.company.city && bookingData.company.country) {
      doc.text(`${bookingData.company.city}, ${bookingData.company.country}`, 20, 121);
    }
  }
  
  // Booker Details
  if (bookingData.booker) {
    doc.setFontSize(14);
    doc.text('Booker', 20, 140);
    doc.setFontSize(12);
    doc.text(`Name: ${bookingData.booker.firstName} ${bookingData.booker.lastName}`, 20, 147);
    if (bookingData.booker.email) {
      doc.text(`Email: ${bookingData.booker.email}`, 20, 154);
    }
    if (bookingData.booker.phone) {
      doc.text(`Phone: ${bookingData.booker.phone}`, 20, 161);
    }
  }
  
  // Stays
  if (bookingData.stays && bookingData.stays.length > 0) {
    doc.setFontSize(14);
    doc.text('Stays', 20, 180);
    
    bookingData.stays.forEach((stay, index) => {
      doc.setFontSize(12);
      const yOffset = 187 + (index * 30);
      doc.text(`Stay ${index + 1}:`, 20, yOffset);
      doc.text(`Hotel: ${stay.hotel}`, 30, yOffset + 7);
      doc.text(`Check-in: ${format(new Date(stay.checkInDate), 'PPP')}`, 30, yOffset + 14);
      doc.text(`Check-out: ${format(new Date(stay.checkOutDate), 'PPP')}`, 30, yOffset + 21);
      doc.text(`Room Type: ${stay.roomType}`, 30, yOffset + 28);
      if (stay.roomNumber) {
        doc.text(`Room Number: ${stay.roomNumber}`, 30, yOffset + 35);
      }
    });
  }
  
  // Additional Notes
  if (bookingData.notes) {
    doc.setFontSize(14);
    doc.text('Notes', 20, doc.internal.pageSize.height - 40);
    doc.setFontSize(12);
    doc.text(bookingData.notes, 20, doc.internal.pageSize.height - 33, { maxWidth: 170 });
  }
  
  // Footer
  doc.setFontSize(10);
  doc.text('Generated by Corporate Meeting Partner', 105, doc.internal.pageSize.height - 10, { align: 'center' });
  
  return doc;
}

export function downloadBookingPDF(bookingData: BookingPDFData) {
  const doc = generateBookingPDF(bookingData);
  doc.save(`Booking_${bookingData.confirmationNo}.pdf`);
}